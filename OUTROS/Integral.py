import numpy as np
y = [8.820286999999999, 11.025358, 15.435502, 19.845645, 24.255788, 29.768466999999998, 36.383682, 41.896361999999996, 47.409040999999995, 54.02425600000001, 60.63947099999999, 67.25468599999999, 72.767365, 79.38258, 83.792723, 84.895259, 84.895259, 82.690187, 82.690187, 85.997795, 89.305402, 90.407938, 91.510474, 91.510474, 93.715546, 100.330761, 106.945976, 110.253583, 106.945976, 99.228225, 94.81808199999999, 93.715546, 101.433297, 112.45865500000001, 124.586549, 141.12458700000002, 163.175303, 170.893054, 169.790518, 149.944873, 157.662624, 146.63726599999998, 155.457552, 154.355017, 148.84233700000001, 160.970232, 167.585447, 163.175303, 143.329658, 131.201764, 125.689085, 117.97133400000001, 112.45865500000001, 99.228225, 116.868798, 141.12458700000002, 146.63726599999998, 160.970232, 144.43219399999998, 154.355017, 188.533627, 304.29989, 325.248071, 348.401323, 326.350606, 334.068357, 378.16979100000003, 375.964719, 328.555678, 383.68247, 337.375965, 402.425579, 350.606395, 385.887541, 415.656009, 478.500551, 442.11686900000007, 534.729879, 389.195149, 686.879824, 395.810364, 509.371555, 406.83572200000003, 727.6736490000001, 799.338479, 715.545755, 830.209482, 832.4145530000001, 866.5931640000001, 637.265711, 897.464168, 873.2083789999999, 861.080485, 922.822492, 604.1896360000001, 972.4366039999999, 954.7960310000001, 879.823594, 943.770673, 884.2337380000001, 900.771775, 942.6681369999999, 921.719956, 861.080485, 909.5920619999999, 815.876516, 912.8996689999999, 930.5402429999999, 416.758545, 737.596472, 1004.410143, 578.831312, 1089.305402, 1026.46086, 509.371555, 417.86107999999996, 452.039691, 1154.355017, 1125.689085, 420.06615199999993, 1082.690187, 1097.0231529999999, 404.63065, 379.27232599999996, 684.6747519999999, 450.93715499999996, 1183.020948, 868.798236, 1165.380375, 1184.123484, 504.96141100000006, 547.9603089999999, 403.528115, 400.220507, 487.320838, 605.2921719999999, 1101.433297, 414.553473, 350.606395, 324.145535, 308.710033, 302.09481800000003, 329.658214, 362.734289, 432.194046, 941.565601, 1159.867696, 1171.99559, 851.1576630000001, 905.181918, 1090.407938, 987.872106, 830.209482, 747.5192940000001, 811.4663730000001, 773.980154, 735.3914, 649.393605, 691.289967, 638.368247, 839.029768, 778.390298, 1121.278942, 1038.5887539999999, 1049.614112, 1054.0242560000002, 1081.587652, 1109.151047, 939.3605289999999, 959.206174, 973.5391400000001, 1012.127894, 794.928335, 871.0033080000001, 1221.609702, 1058.434399, 1084.895259, 1200.661521, 1289.966924, 597.574421, 1257.993385, 1179.7133410000001, 1240.352811, 925.0275630000001, 859.977949, 987.872106, 949.2833519999999, 944.873208, 878.721058, 832.4145530000001, 925.0275630000001, 1041.896362, 1036.3836820000001, 1049.614112, 1060.6394710000002, 1073.869901, 620.727674, 986.7695699999999, 1052.9217199999998, 1034.178611, 1031.973539, 1029.768467, 1007.717751, 1006.615215, 1006.615215, 968.0264609999999, 985.667034, 1001.102536, 1004.410143, 1008.8202869999999, 1008.8202869999999, 937.155458, 1023.153252, 1041.896362, 1029.768467, 1037.486218, 1030.871003, 456.44983499999995, 1055.126792, 432.194046, 525.909592, 1082.690187, 1062.844542, 1083.792723, 1066.15215, 1011.025358, 1009.9228220000001, 621.830209, 1012.127894, 798.235943, 489.52590999999995, 810.363837, 1020.9481810000001, 560.088203, 941.565601, 1030.871003, 981.256891, 970.231533, 826.901874, 621.830209, 918.4123480000001, 894.15656, 883.1312019999999, 878.721058, 872.1058429999999, 855.567806, 833.5170889999999, 823.594267, 808.158765, 781.697905, 273.428886, 241.45534700000002, 281.146637, 254.685777, 243.660419, 703.417861, 692.392503, 679.1620730000001, 672.546858, 629.54796, 594.266814, 613.0099230000001, 605.2921719999999, 577.7287759999999, 597.574421, 605.2921719999999, 592.061742, 586.5490629999999, 582.13892, 574.4211690000001, 567.805954, 556.7805950000001, 553.472988, 544.652701, 535.8324150000001, 530.3197349999999, 524.807056, 522.601985, 513.781698, 511.576626, 498.346196, 498.346196, 500.551268, 500.551268, 497.24366, 484.01322999999996, 466.372657, 443.219405, 421.168688, 410.14333, 411.245865, 407.938258, 197.353914, 398.01543599999997, 398.01543599999997, 389.195149, 386.990077, 237.045204, 355.01653799999997, 372.657111, 369.349504, 335.17089300000004, 243.660419, 320.837927, 131.201764, 120.176406, 115.76626200000001, 113.561191, 111.35611899999999, 109.15104699999999, 110.253583, 108.04851200000002, 108.04851200000002, 105.84343999999999, 104.740904, 148.84233700000001, 105.84343999999999, 98.12568900000001, 95.92061700000001, 92.61301, 89.305402, 84.895259, 81.587652, 78.28004399999999, 76.074972, 73.869901, 70.56229300000001, 67.25468599999999, 63.947078000000005, 60.63947099999999, 55.126792, 50.716648, 46.306505, 38.588753999999994, 35.281147, 34.178611, 31.973539000000002, 28.665932, 26.460859999999997, 23.153252, 18.743109, 15.435502, 12.127894, 8.820286999999999, 4.410143, 2.205072, None, None, None, None, None, None, None, None, None, None, None, None, None, None]
x = [624.0, 626.0, 628.0, 630.0, 632.0, 634.0, 636.0, 638.0, 640.0, 642.0, 644.0, 646.0, 648.0, 650.0, 652.0, 654.0, 656.0, 658.0, 660.0, 662.0, 664.0, 666.0, 668.0, 670.0, 672.0, 674.0, 676.0, 678.0, 680.0, 682.0, 684.0, 686.0, 688.0, 690.0, 692.0, 694.0, 696.0, 698.0, 700.0, 702.0, 704.0, 706.0, 708.0, 710.0, 712.0, 714.0, 716.0, 718.0, 720.0, 722.0, 724.0, 726.0, 728.0, 730.0, 732.0, 734.0, 736.0, 738.0, 740.0, 742.0, 744.0, 746.0, 748.0, 750.0, 752.0, 754.0, 756.0, 758.0, 760.0, 762.0, 764.0, 766.0, 768.0, 770.0, 772.0, 774.0, 776.0, 778.0, 780.0, 782.0, 784.0, 786.0, 788.0, 790.0, 792.0, 794.0, 796.0, 798.0, 800.0, 802.0, 804.0, 806.0, 808.0, 810.0, 812.0, 814.0, 816.0, 818.0, 820.0, 822.0, 824.0, 826.0, 828.0, 830.0, 832.0, 834.0, 836.0, 838.0, 840.0, 842.0, 844.0, 846.0, 848.0, 850.0, 852.0, 854.0, 856.0, 858.0, 860.0, 862.0, 864.0, 866.0, 868.0, 870.0, 872.0, 874.0, 876.0, 878.0, 880.0, 882.0, 884.0, 886.0, 888.0, 890.0, 892.0, 894.0, 896.0, 898.0, 900.0, 902.0, 904.0, 906.0, 908.0, 910.0, 912.0, 914.0, 916.0, 918.0, 920.0, 922.0, 924.0, 926.0, 928.0, 930.0, 932.0, 934.0, 936.0, 938.0, 940.0, 942.0, 944.0, 946.0, 948.0, 950.0, 952.0, 954.0, 956.0, 958.0, 960.0, 962.0000000000001, 964.0, 966.0000000000001, 968.0, 970.0000000000001, 972.0, 974.0, 976.0, 978.0, 979.9999999999999, 982.0, 983.9999999999999, 986.0, 987.9999999999999, 990.0, 992.0000000000001, 994.0, 996.0000000000001, 998.0, 1000.0000000000001, 1002.0, 1004.0, 1006.0, 1008.0, 1009.9999999999999, 1012.0, 1013.9999999999999, 1016.0, 1017.9999999999999, 1020.0, 1022.0000000000001, 1024.0, 1026.0, 1028.0, 1030.0, 1032.0, 1034.0, 1036.0, 1038.0, 1040.0, 1042.0, 1044.0, 1046.0, 1048.0, 1050.0, 1052.0, 1054.0, 1056.0, 1058.0, 1060.0, 1062.0, 1064.0, 1066.0, 1068.0, 1070.0, 1072.0, 1074.0, 1076.0, 1078.0, 1080.0, 1082.0, 1084.0, 1086.0, 1088.0, 1090.0, 1092.0, 1094.0, 1096.0, 1098.0, 1100.0, 1102.0, 1104.0, 1106.0, 1108.0, 1110.0, 1112.0, 1114.0, 1116.0, 1118.0, 1120.0, 1122.0, 1124.0, 1126.0, 1128.0, 1130.0, 1132.0, 1134.0, 1136.0, 1138.0, 1140.0, 1142.0, 1144.0, 1146.0, 1148.0, 1150.0, 1152.0, 1154.0, 1156.0, 1158.0, 1160.0, 1162.0, 1164.0, 1166.0, 1168.0, 1170.0, 1172.0, 1174.0, 1176.0, 1178.0, 1180.0, 1182.0, 1184.0, 1186.0, 1188.0, 1190.0, 1192.0, 1194.0, 1196.0, 1198.0, 1200.0, 1202.0, 1204.0, 1206.0, 1208.0, 1210.0, 1212.0, 1214.0, 1216.0, 1218.0, 1220.0, 1222.0, 1224.0, 1226.0, 1228.0, 1230.0, 1232.0, 1234.0, 1236.0, 1238.0, 1240.0, 1242.0, 1244.0, 1246.0, 1248.0, 1250.0, 1252.0, 1254.0, 1256.0, 1258.0, 1260.0, 1262.0, 1264.0, 1266.0, 1268.0, 1270.0, 1272.0, 1274.0, 1276.0, 1278.0, 1280.0, 1282.0, 1284.0, 1286.0, 1288.0, 1290.0, 1292.0, 1294.0, 1296.0, 1298.0, 1300.0, 1302.0, 1304.0, 1306.0, 1308.0, 1310.0, 1312.0, 1314.0, 1316.0, 1318.0, 1320.0, 1322.0, 1324.0, 1326.0, 1328.0, 1330.0, 1332.0, 1334.0, 1336.0, 1338.0, 1340.0, 1342.0]

def integral(x, y):
  total = 0
  dxi = x[1]-x[0]
  for i in range(len(x)-1):
    pa= i
    pp = i+1

    if(y[i]) != None:
      while y[pp] == None:
        if(pp < (len(y)-1)):  break
        else: pp += 1
    else:
      while y[pa] == None:
        if(pa-1 < 0): break
        else: pa -= 1

    ant=y[pa]
    tant=x[pa]
    prox=y[pp]
    tprox=x[pp]

    if prox != None and ant != None:
      t = np.trapz([ant, prox], dx=dxi)
      total += t
      #print([ant, prox], [tant, tprox], t)

  return(total)

def integral2(x, y):
    i = 0
    total = 0
    ant = '-999'
    prox = '-999'
    tant = '-999'
    tprox = '-999'

    while i < len(y):
        if(i+1 < len(y)) :
            if(y[i] == None):
                if(ant == '-999'):  
                    ant = 0
                    tant = int(x[i])
            else: 
                if(ant == '-999'):  
                    ant = y[i]
                    tant = int(x[i])
                else:
                    # faz o calculo
                    prox = y[i]
                    tprox = int(x[i])

                    #print(ant, prox, tant, tprox)
                    intervalo = tprox - tant
                    
                    if(intervalo == 0):
                        intervalo=1
                        print(ant, prox, tant, tprox)
                    S = (ant+prox) * intervalo / 2
                    S = S/intervalo

                    
                    b = np.trapz([ant, prox], x=[tant, tprox])

                    #print(S, b)
                    ant = y[i]
                    tant = int(x[i])
                    total += S
                    #print(b)                 
        else:
            if(y[i] != None): 
                prox = y[i]
                tprox = int(x[i])
                print(ant, prox, tant, tprox)
                b = np.trapz([ant, prox], x=[tant, tprox])
                total += S
            #print(b)
        i+=1
    return (total)

itg = integral(x, y)
print(itg/1440)

itg2 = integral2(x, y)
print(itg2/720)
